# Makefile.in generated by automake 1.8.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.5.4.1 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



SOURCES = $(neuroscope_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = neuroscope$(EXEEXT)
subdir = src
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdelnkdir)" "$(DESTDIR)$(mimeTypesdir)" "$(DESTDIR)$(rcdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_neuroscope_OBJECTS = main.$(OBJEXT) neuroscope.$(OBJEXT) \
	neuroscopeview.$(OBJEXT) baseframe.$(OBJEXT) \
	channelcolors.$(OBJEXT) channelgroupview.$(OBJEXT) \
	channeliconview.$(OBJEXT) channelpalette.$(OBJEXT) \
	clustercolors.$(OBJEXT) clusterproperties.$(OBJEXT) \
	clustersprovider.$(OBJEXT) configuration.$(OBJEXT) \
	dataprovider.$(OBJEXT) eventsprovider.$(OBJEXT) \
	itemcolors.$(OBJEXT) itemgroupview.$(OBJEXT) \
	itemiconview.$(OBJEXT) itempalette.$(OBJEXT) \
	neuroscopedoc.$(OBJEXT) neuroscopexmlreader.$(OBJEXT) \
	positionproperties.$(OBJEXT) positionsprovider.$(OBJEXT) \
	positionview.$(OBJEXT) prefdefaults.$(OBJEXT) \
	prefdialog.$(OBJEXT) prefgeneral.$(OBJEXT) \
	properties.$(OBJEXT) propertiesdialog.$(OBJEXT) tags.$(OBJEXT) \
	tracesprovider.$(OBJEXT) traceview.$(OBJEXT) \
	tracewidget.$(OBJEXT) zoomwindow.$(OBJEXT) \
	sessionxmlwriter.$(OBJEXT) parameterxmlcreator.$(OBJEXT) \
	parameterxmlmodifier.$(OBJEXT) imagecreator.$(OBJEXT) \
	utilities.$(OBJEXT) eventdata.$(OBJEXT)
#>- neuroscope_OBJECTS = $(am_neuroscope_OBJECTS)
#>+ 23
neuroscope_final_OBJECTS = neuroscope.all_cpp.o 
neuroscope_nofinal_OBJECTS = main.$(OBJEXT) neuroscope.$(OBJEXT) \
	neuroscopeview.$(OBJEXT) baseframe.$(OBJEXT) \
	channelcolors.$(OBJEXT) channelgroupview.$(OBJEXT) \
	channeliconview.$(OBJEXT) channelpalette.$(OBJEXT) \
	clustercolors.$(OBJEXT) clusterproperties.$(OBJEXT) \
	clustersprovider.$(OBJEXT) configuration.$(OBJEXT) \
	dataprovider.$(OBJEXT) eventsprovider.$(OBJEXT) \
	itemcolors.$(OBJEXT) itemgroupview.$(OBJEXT) \
	itemiconview.$(OBJEXT) itempalette.$(OBJEXT) \
	neuroscopedoc.$(OBJEXT) neuroscopexmlreader.$(OBJEXT) \
	positionproperties.$(OBJEXT) positionsprovider.$(OBJEXT) \
	positionview.$(OBJEXT) prefdefaults.$(OBJEXT) \
	prefdialog.$(OBJEXT) prefgeneral.$(OBJEXT) \
	properties.$(OBJEXT) propertiesdialog.$(OBJEXT) tags.$(OBJEXT) \
	tracesprovider.$(OBJEXT) traceview.$(OBJEXT) \
	tracewidget.$(OBJEXT) zoomwindow.$(OBJEXT) \
	sessionxmlwriter.$(OBJEXT) parameterxmlcreator.$(OBJEXT) \
	parameterxmlmodifier.$(OBJEXT) imagecreator.$(OBJEXT) \
	utilities.$(OBJEXT) eventdata.$(OBJEXT) positionpropertieslayout.$(OBJEXT) prefdefaultslayout.$(OBJEXT) prefgenerallayout.$(OBJEXT) propertieslayout.$(OBJEXT) clusterpropertieslayout.$(OBJEXT)\
channelpalette.moc.o neuroscopedoc.moc.o neuroscope.moc.o itemgroupview.moc.o eventsprovider.moc.o traceview.moc.o positionview.moc.o globaleventsprovider.moc.o neuroscopeview.moc.o tracesprovider.moc.o positionproperties.moc.o positionsprovider.moc.o channeliconview.moc.o dataprovider.moc.o tracewidget.moc.o clustersprovider.moc.o prefdefaults.moc.o itemiconview.moc.o baseframe.moc.o properties.moc.o clusterproperties.moc.o propertiesdialog.moc.o prefdialog.moc.o channelgroupview.moc.o prefgeneral.moc.o itempalette.moc.o 
@KDE_USE_FINAL_FALSE@neuroscope_OBJECTS = $(neuroscope_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@neuroscope_OBJECTS = $(neuroscope_final_OBJECTS)
am__DEPENDENCIES_1 =
neuroscope_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/baseframe.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channelgroupview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channeliconview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channelpalette.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/clustercolors.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/clusterproperties.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/clustersprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/dataprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/eventdata.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/eventsprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/imagecreator.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itemcolors.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itemgroupview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itemiconview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/itempalette.Po ./$(DEPDIR)/main.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscope.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscopedoc.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscopeview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscopexmlreader.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/parameterxmlcreator.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/parameterxmlmodifier.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/positionproperties.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/positionsprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/positionview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/prefdefaults.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/prefdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/prefgeneral.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/properties.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/propertiesdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/sessionxmlwriter.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/tags.Po ./$(DEPDIR)/tracesprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/traceview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/tracewidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/utilities.Po ./$(DEPDIR)/zoomwindow.Po
#>+ 72
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/positionpropertieslayout.P $(DEPDIR)/prefdefaultslayout.P $(DEPDIR)/prefgenerallayout.P $(DEPDIR)/clusterpropertieslayout.P $(DEPDIR)/channelpalette.moc.P $(DEPDIR)/neuroscopedoc.moc.P $(DEPDIR)/neuroscope.moc.P $(DEPDIR)/itemgroupview.moc.P $(DEPDIR)/eventsprovider.moc.P $(DEPDIR)/traceview.moc.P $(DEPDIR)/positionview.moc.P $(DEPDIR)/globaleventsprovider.moc.P $(DEPDIR)/neuroscopeview.moc.P $(DEPDIR)/tracesprovider.moc.P $(DEPDIR)/positionproperties.moc.P $(DEPDIR)/positionsprovider.moc.P $(DEPDIR)/channeliconview.moc.P $(DEPDIR)/dataprovider.moc.P $(DEPDIR)/tracewidget.moc.P $(DEPDIR)/clustersprovider.moc.P $(DEPDIR)/prefdefaults.moc.P $(DEPDIR)/itemiconview.moc.P $(DEPDIR)/baseframe.moc.P $(DEPDIR)/clusterproperties.moc.P $(DEPDIR)/propertiesdialog.moc.P $(DEPDIR)/prefdialog.moc.P $(DEPDIR)/channelgroupview.moc.P $(DEPDIR)/prefgeneral.moc.P $(DEPDIR)/itempalette.moc.P  $(DEPDIR)/neuroscope.all_cpp.P ./$(DEPDIR)/baseframe.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channelgroupview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channeliconview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channelpalette.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/clustercolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/clusterproperties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/clustersprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/dataprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/eventdata.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/eventsprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/imagecreator.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itemcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itemgroupview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itemiconview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/itempalette.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscope.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopedoc.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopeview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopexmlreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterxmlcreator.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterxmlmodifier.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/positionproperties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/positionsprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/positionview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/prefdefaults.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/prefdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/prefgeneral.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/properties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/propertiesdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/sessionxmlwriter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/tags.Po ./$(DEPDIR)/tracesprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/traceview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/tracewidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/utilities.Po ./$(DEPDIR)/zoomwindow.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/positionpropertieslayout.P $(DEPDIR)/prefdefaultslayout.P $(DEPDIR)/prefgenerallayout.P $(DEPDIR)/clusterpropertieslayout.P $(DEPDIR)/channelpalette.moc.P $(DEPDIR)/neuroscopedoc.moc.P $(DEPDIR)/neuroscope.moc.P $(DEPDIR)/itemgroupview.moc.P $(DEPDIR)/eventsprovider.moc.P $(DEPDIR)/traceview.moc.P $(DEPDIR)/positionview.moc.P $(DEPDIR)/globaleventsprovider.moc.P $(DEPDIR)/neuroscopeview.moc.P $(DEPDIR)/tracesprovider.moc.P $(DEPDIR)/positionproperties.moc.P $(DEPDIR)/positionsprovider.moc.P $(DEPDIR)/channeliconview.moc.P $(DEPDIR)/dataprovider.moc.P $(DEPDIR)/tracewidget.moc.P $(DEPDIR)/clustersprovider.moc.P $(DEPDIR)/prefdefaults.moc.P $(DEPDIR)/itemiconview.moc.P $(DEPDIR)/baseframe.moc.P $(DEPDIR)/clusterproperties.moc.P $(DEPDIR)/propertiesdialog.moc.P $(DEPDIR)/prefdialog.moc.P $(DEPDIR)/channelgroupview.moc.P $(DEPDIR)/prefgeneral.moc.P $(DEPDIR)/itempalette.moc.P ./$(DEPDIR)/baseframe.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channelgroupview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channeliconview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channelpalette.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/clustercolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/clusterproperties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/clustersprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/dataprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/eventdata.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/eventsprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/imagecreator.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itemcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itemgroupview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itemiconview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/itempalette.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscope.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopedoc.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopeview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopexmlreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterxmlcreator.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterxmlmodifier.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/positionproperties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/positionsprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/positionview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/prefdefaults.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/prefdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/prefgeneral.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/properties.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/propertiesdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/sessionxmlwriter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/tags.Po ./$(DEPDIR)/tracesprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/traceview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/tracewidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/utilities.Po ./$(DEPDIR)/zoomwindow.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(neuroscope_SOURCES)
DIST_SOURCES = $(neuroscope_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-exec-recursive install-info-recursive \
#>- 	install-recursive installcheck-recursive installdirs-recursive \
#>- 	pdf-recursive ps-recursive uninstall-info-recursive \
#>- 	uninstall-recursive
#>+ 6
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive nmcheck-recursive bcheck-recursive
kdelnkDATA_INSTALL = $(INSTALL_DATA)
mimeTypesDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kdelnk_DATA) $(mimeTypes_DATA) $(noinst_DATA) $(rc_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = -I$(top_srcdir)/src/cursors -I$(top_srcdir)/src/icons $(all_includes) $(LIBXML_CFLAGS)

# the library search path. 
neuroscope_LDFLAGS = $(KDE_RPATH) $(all_libraries) $(LIBXML_LIBS)

# the libraries to link against.
neuroscope_LDADD = $(LIB_KFILE) $(LIB_KDEPRINT)

# which sources should be compiled for neuroscope
#>- neuroscope_SOURCES = main.cpp neuroscope.cpp neuroscopeview.cpp baseframe.cpp channelcolors.cpp channelgroupview.cpp channeliconview.cpp channelpalette.cpp clustercolors.cpp clusterproperties.cpp clustersprovider.cpp configuration.cpp dataprovider.cpp eventsprovider.cpp itemcolors.cpp itemgroupview.cpp itemiconview.cpp itempalette.cpp neuroscopedoc.cpp neuroscopexmlreader.cpp positionproperties.cpp positionpropertieslayout.ui positionsprovider.cpp positionview.cpp prefdefaults.cpp prefdefaultslayout.ui prefdialog.cpp prefgeneral.cpp prefgenerallayout.ui properties.cpp propertiesdialog.cpp propertieslayout.ui tags.cpp tracesprovider.cpp traceview.cpp tracewidget.cpp zoomwindow.cpp clusterpropertieslayout.ui sessionxmlwriter.cpp parameterxmlcreator.cpp parameterxmlmodifier.cpp imagecreator.cpp utilities.cpp eventdata.cpp
#>+ 1
neuroscope_SOURCES=main.cpp neuroscope.cpp neuroscopeview.cpp baseframe.cpp channelcolors.cpp channelgroupview.cpp channeliconview.cpp channelpalette.cpp clustercolors.cpp clusterproperties.cpp clustersprovider.cpp configuration.cpp dataprovider.cpp eventsprovider.cpp itemcolors.cpp itemgroupview.cpp itemiconview.cpp itempalette.cpp neuroscopedoc.cpp neuroscopexmlreader.cpp positionproperties.cpp  positionsprovider.cpp positionview.cpp prefdefaults.cpp  prefdialog.cpp prefgeneral.cpp  properties.cpp propertiesdialog.cpp  tags.cpp tracesprovider.cpp traceview.cpp tracewidget.cpp zoomwindow.cpp  sessionxmlwriter.cpp parameterxmlcreator.cpp parameterxmlmodifier.cpp imagecreator.cpp utilities.cpp eventdata.cpp positionpropertieslayout.cpp prefdefaultslayout.cpp prefgenerallayout.cpp propertieslayout.cpp clusterpropertieslayout.cpp

# these are the headers for your project
noinst_HEADERS = neuroscope.h neuroscopeview.h array.h baseframe.h channelcolors.h channelgroupview.h channeliconview.h channelpalette.h clustercolors.h clusterproperties.h clustersprovider.h configuration.h dataprovider.h eventsprovider.h itemcolors.h itemgroupview.h itemiconview.h itempalette.h neuroscopedoc.h neuroscopexmlreader.h positionproperties.h positionsprovider.h positionview.h prefdefaults.h prefdialog.h prefgeneral.h propertiesdialog.h properties.h sessionInformation.h tags.h timer.h tracesprovider.h traceview.h tracewidget.h zoomwindow.h types.h sessionxmlwriter.h parameterxmlcreator.h parameterxmlmodifier.h imagecreator.h utilities.h eventdata.h globaleventsprovider.h

# client stuff

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = neuroscope

# this is where the kdelnk file will go 
kdelnkdir = $(kde_appsdir)/Science
kdelnk_DATA = neuroscope.desktop

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/neuroscope
rc_DATA = neuroscopeui.rc
noinst_DATA = neuroscope_session.xsd parameter.xsd
SUBDIRS = cursors icons
mimeTypesdir = $(kde_mimedir)/application
mimeTypes_DATA = data-file.desktop eeg-file.desktop neuroscope-session.desktop filter-file.desktop
AM_CXXFLAGS = -pedantic
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
neuroscope$(EXEEXT): $(neuroscope_OBJECTS) $(neuroscope_DEPENDENCIES) 
	@rm -f neuroscope$(EXEEXT)
	$(CXXLINK) $(neuroscope_LDFLAGS) $(neuroscope_OBJECTS) $(neuroscope_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/baseframe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channelcolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channelgroupview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channeliconview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channelpalette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clustercolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clusterproperties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clustersprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dataprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventsprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imagecreator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemcolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemgroupview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemiconview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itempalette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscope.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscopedoc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscopeview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscopexmlreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameterxmlcreator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameterxmlmodifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/positionproperties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/positionsprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/positionview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefdefaults.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prefgeneral.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propertiesdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sessionxmlwriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracesprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/traceview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zoomwindow.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kdelnkdir)" || $(mkdir_p) "$(DESTDIR)$(kdelnkdir)"
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kdelnkDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  $(kdelnkDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done
install-mimeTypesDATA: $(mimeTypes_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mimeTypesdir)" || $(mkdir_p) "$(DESTDIR)$(mimeTypesdir)"
	@list='$(mimeTypes_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(mimeTypesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(mimeTypesdir)/$$f'"; \
	  $(mimeTypesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(mimeTypesdir)/$$f"; \
	done

uninstall-mimeTypesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(mimeTypes_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(mimeTypesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(mimeTypesdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdelnkdir)" "$(DESTDIR)$(mimeTypesdir)" "$(DESTDIR)$(rcdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-kdelnkDATA install-mimeTypesDATA \
#>- 	install-rcDATA
#>+ 2
install-data-am: install-kde-icons  install-kdelnkDATA install-mimeTypesDATA \
	install-rcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-kdelnkDATA uninstall-mimeTypesDATA uninstall-rcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-mimeTypesDATA uninstall-rcDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-kdelnkDATA install-man \
	install-mimeTypesDATA install-rcDATA install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-kdelnkDATA \
	uninstall-mimeTypesDATA uninstall-rcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/neuroscope.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
channelpalette.moc.cpp: $(srcdir)/channelpalette.h
	$(MOC) $(srcdir)/channelpalette.h -o channelpalette.moc.cpp

#>+ 2
mocs: channelpalette.moc.cpp

#>+ 3
neuroscopedoc.moc.cpp: $(srcdir)/neuroscopedoc.h
	$(MOC) $(srcdir)/neuroscopedoc.h -o neuroscopedoc.moc.cpp

#>+ 2
mocs: neuroscopedoc.moc.cpp

#>+ 3
neuroscope.moc.cpp: $(srcdir)/neuroscope.h
	$(MOC) $(srcdir)/neuroscope.h -o neuroscope.moc.cpp

#>+ 2
mocs: neuroscope.moc.cpp

#>+ 3
itemgroupview.moc.cpp: $(srcdir)/itemgroupview.h
	$(MOC) $(srcdir)/itemgroupview.h -o itemgroupview.moc.cpp

#>+ 2
mocs: itemgroupview.moc.cpp

#>+ 3
eventsprovider.moc.cpp: $(srcdir)/eventsprovider.h
	$(MOC) $(srcdir)/eventsprovider.h -o eventsprovider.moc.cpp

#>+ 2
mocs: eventsprovider.moc.cpp

#>+ 3
traceview.moc.cpp: $(srcdir)/traceview.h
	$(MOC) $(srcdir)/traceview.h -o traceview.moc.cpp

#>+ 2
mocs: traceview.moc.cpp

#>+ 3
positionview.moc.cpp: $(srcdir)/positionview.h
	$(MOC) $(srcdir)/positionview.h -o positionview.moc.cpp

#>+ 2
mocs: positionview.moc.cpp

#>+ 3
globaleventsprovider.moc.cpp: $(srcdir)/globaleventsprovider.h
	$(MOC) $(srcdir)/globaleventsprovider.h -o globaleventsprovider.moc.cpp

#>+ 2
mocs: globaleventsprovider.moc.cpp

#>+ 3
neuroscopeview.moc.cpp: $(srcdir)/neuroscopeview.h
	$(MOC) $(srcdir)/neuroscopeview.h -o neuroscopeview.moc.cpp

#>+ 2
mocs: neuroscopeview.moc.cpp

#>+ 3
tracesprovider.moc.cpp: $(srcdir)/tracesprovider.h
	$(MOC) $(srcdir)/tracesprovider.h -o tracesprovider.moc.cpp

#>+ 2
mocs: tracesprovider.moc.cpp

#>+ 3
positionproperties.moc.cpp: $(srcdir)/positionproperties.h
	$(MOC) $(srcdir)/positionproperties.h -o positionproperties.moc.cpp

#>+ 2
mocs: positionproperties.moc.cpp

#>+ 3
positionsprovider.moc.cpp: $(srcdir)/positionsprovider.h
	$(MOC) $(srcdir)/positionsprovider.h -o positionsprovider.moc.cpp

#>+ 2
mocs: positionsprovider.moc.cpp

#>+ 3
channeliconview.moc.cpp: $(srcdir)/channeliconview.h
	$(MOC) $(srcdir)/channeliconview.h -o channeliconview.moc.cpp

#>+ 2
mocs: channeliconview.moc.cpp

#>+ 3
dataprovider.moc.cpp: $(srcdir)/dataprovider.h
	$(MOC) $(srcdir)/dataprovider.h -o dataprovider.moc.cpp

#>+ 2
mocs: dataprovider.moc.cpp

#>+ 3
tracewidget.moc.cpp: $(srcdir)/tracewidget.h
	$(MOC) $(srcdir)/tracewidget.h -o tracewidget.moc.cpp

#>+ 2
mocs: tracewidget.moc.cpp

#>+ 3
clustersprovider.moc.cpp: $(srcdir)/clustersprovider.h
	$(MOC) $(srcdir)/clustersprovider.h -o clustersprovider.moc.cpp

#>+ 2
mocs: clustersprovider.moc.cpp

#>+ 3
prefdefaults.moc.cpp: $(srcdir)/prefdefaults.h
	$(MOC) $(srcdir)/prefdefaults.h -o prefdefaults.moc.cpp

#>+ 2
mocs: prefdefaults.moc.cpp

#>+ 3
itemiconview.moc.cpp: $(srcdir)/itemiconview.h
	$(MOC) $(srcdir)/itemiconview.h -o itemiconview.moc.cpp

#>+ 2
mocs: itemiconview.moc.cpp

#>+ 3
imagecreator.moc: $(srcdir)/imagecreator.h
	$(MOC) $(srcdir)/imagecreator.h -o imagecreator.moc

#>+ 2
mocs: imagecreator.moc

#>+ 3
baseframe.moc.cpp: $(srcdir)/baseframe.h
	$(MOC) $(srcdir)/baseframe.h -o baseframe.moc.cpp

#>+ 2
mocs: baseframe.moc.cpp

#>+ 3
properties.moc.cpp: $(srcdir)/properties.h
	$(MOC) $(srcdir)/properties.h -o properties.moc.cpp

#>+ 2
mocs: properties.moc.cpp

#>+ 3
clusterproperties.moc.cpp: $(srcdir)/clusterproperties.h
	$(MOC) $(srcdir)/clusterproperties.h -o clusterproperties.moc.cpp

#>+ 2
mocs: clusterproperties.moc.cpp

#>+ 3
propertiesdialog.moc.cpp: $(srcdir)/propertiesdialog.h
	$(MOC) $(srcdir)/propertiesdialog.h -o propertiesdialog.moc.cpp

#>+ 2
mocs: propertiesdialog.moc.cpp

#>+ 3
prefdialog.moc.cpp: $(srcdir)/prefdialog.h
	$(MOC) $(srcdir)/prefdialog.h -o prefdialog.moc.cpp

#>+ 2
mocs: prefdialog.moc.cpp

#>+ 3
channelgroupview.moc.cpp: $(srcdir)/channelgroupview.h
	$(MOC) $(srcdir)/channelgroupview.h -o channelgroupview.moc.cpp

#>+ 2
mocs: channelgroupview.moc.cpp

#>+ 3
prefgeneral.moc.cpp: $(srcdir)/prefgeneral.h
	$(MOC) $(srcdir)/prefgeneral.h -o prefgeneral.moc.cpp

#>+ 2
mocs: prefgeneral.moc.cpp

#>+ 3
itempalette.moc.cpp: $(srcdir)/itempalette.h
	$(MOC) $(srcdir)/itempalette.h -o itempalette.moc.cpp

#>+ 2
mocs: itempalette.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  channelpalette.moc.cpp neuroscopedoc.moc.cpp neuroscope.moc.cpp itemgroupview.moc.cpp eventsprovider.moc.cpp traceview.moc.cpp positionview.moc.cpp globaleventsprovider.moc.cpp neuroscopeview.moc.cpp tracesprovider.moc.cpp positionproperties.moc.cpp positionsprovider.moc.cpp channeliconview.moc.cpp dataprovider.moc.cpp tracewidget.moc.cpp clustersprovider.moc.cpp prefdefaults.moc.cpp itemiconview.moc.cpp imagecreator.moc baseframe.moc.cpp properties.moc.cpp clusterproperties.moc.cpp propertiesdialog.moc.cpp prefdialog.moc.cpp channelgroupview.moc.cpp prefgeneral.moc.cpp itempalette.moc.cpp

#>+ 2
KDE_DIST=clusterpropertieslayout.h positionpropertieslayout.h propertieslayout.h eeg-file.desktop prefdefaultslayout.ui neuroscope-session.desktop neuroscopeui.rc prefgenerallayout.h data-file.desktop hi64-app-neuroscope.png filter-file.desktop hi48-app-neuroscope.png hi16-app-neuroscope.png propertieslayout.ui prefgenerallayout.ui test properties.loT neuroscope.desktop hi22-app-neuroscope.png positionpropertieslayout.ui clusterpropertieslayout.ui Makefile.in hi32-app-neuroscope.png neuroscope.lsm log parameter.xsd neuroscope_session.xsd Makefile.am prefdefaultslayout.h 

#>+ 8
clean-ui:
	-rm -f \
	positionpropertieslayout.cpp positionpropertieslayout.h positionpropertieslayout.moc \
	prefdefaultslayout.cpp prefdefaultslayout.h prefdefaultslayout.moc \
	prefgenerallayout.cpp prefgenerallayout.h prefgenerallayout.moc \
	propertieslayout.cpp propertieslayout.h propertieslayout.moc \
	clusterpropertieslayout.cpp clusterpropertieslayout.h clusterpropertieslayout.moc 

#>+ 2
docs-am:

#>+ 19
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-neuroscope.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/neuroscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-neuroscope.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/neuroscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-neuroscope.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/neuroscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-neuroscope.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/neuroscope.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-neuroscope.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/neuroscope.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/neuroscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/neuroscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/neuroscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/neuroscope.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/neuroscope.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
neuroscope.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/neuroscope.cpp $(srcdir)/neuroscopeview.cpp $(srcdir)/baseframe.cpp $(srcdir)/channelcolors.cpp $(srcdir)/channelgroupview.cpp $(srcdir)/channeliconview.cpp $(srcdir)/channelpalette.cpp $(srcdir)/clustercolors.cpp $(srcdir)/clusterproperties.cpp $(srcdir)/clustersprovider.cpp $(srcdir)/configuration.cpp $(srcdir)/dataprovider.cpp $(srcdir)/eventsprovider.cpp $(srcdir)/itemcolors.cpp $(srcdir)/itemgroupview.cpp $(srcdir)/itemiconview.cpp $(srcdir)/itempalette.cpp $(srcdir)/neuroscopedoc.cpp $(srcdir)/neuroscopexmlreader.cpp $(srcdir)/positionproperties.cpp $(srcdir)/positionsprovider.cpp $(srcdir)/positionview.cpp $(srcdir)/prefdefaults.cpp $(srcdir)/prefdialog.cpp $(srcdir)/prefgeneral.cpp $(srcdir)/properties.cpp $(srcdir)/propertiesdialog.cpp $(srcdir)/tags.cpp $(srcdir)/tracesprovider.cpp $(srcdir)/traceview.cpp $(srcdir)/tracewidget.cpp $(srcdir)/zoomwindow.cpp $(srcdir)/sessionxmlwriter.cpp $(srcdir)/parameterxmlcreator.cpp $(srcdir)/parameterxmlmodifier.cpp $(srcdir)/imagecreator.cpp $(srcdir)/utilities.cpp $(srcdir)/eventdata.cpp $(srcdir)/positionpropertieslayout.cpp $(srcdir)/prefdefaultslayout.cpp $(srcdir)/prefgenerallayout.cpp $(srcdir)/propertieslayout.cpp $(srcdir)/clusterpropertieslayout.cpp $(srcdir)/neuroscopedoc.moc.cpp $(srcdir)/itemgroupview.moc.cpp $(srcdir)/positionview.moc.cpp $(srcdir)/neuroscopeview.moc.cpp $(srcdir)/positionsprovider.moc.cpp $(srcdir)/tracewidget.moc.cpp $(srcdir)/properties.moc.cpp $(srcdir)/propertiesdialog.moc.cpp $(srcdir)/itempalette.moc.cpp $(srcdir)/channelpalette.moc.cpp $(srcdir)/neuroscope.moc.cpp $(srcdir)/eventsprovider.moc.cpp $(srcdir)/traceview.moc.cpp $(srcdir)/globaleventsprovider.moc.cpp $(srcdir)/tracesprovider.moc.cpp $(srcdir)/positionproperties.moc.cpp $(srcdir)/channeliconview.moc.cpp $(srcdir)/dataprovider.moc.cpp $(srcdir)/clustersprovider.moc.cpp $(srcdir)/prefdefaults.moc.cpp $(srcdir)/itemiconview.moc.cpp $(srcdir)/baseframe.moc.cpp $(srcdir)/clusterproperties.moc.cpp $(srcdir)/prefdialog.moc.cpp $(srcdir)/channelgroupview.moc.cpp $(srcdir)/prefgeneral.moc.cpp  positionpropertieslayout.moc clusterpropertieslayout.moc imagecreator.moc prefgenerallayout.moc propertieslayout.moc prefdefaultslayout.moc
	@echo 'creating neuroscope.all_cpp.cpp ...'; \
	rm -f neuroscope.all_cpp.files neuroscope.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> neuroscope.all_cpp.final; \
	for file in main.cpp neuroscope.cpp neuroscopeview.cpp baseframe.cpp channelcolors.cpp channelgroupview.cpp channeliconview.cpp channelpalette.cpp clustercolors.cpp clusterproperties.cpp clustersprovider.cpp configuration.cpp dataprovider.cpp eventsprovider.cpp itemcolors.cpp itemgroupview.cpp itemiconview.cpp itempalette.cpp neuroscopedoc.cpp neuroscopexmlreader.cpp positionproperties.cpp positionsprovider.cpp positionview.cpp prefdefaults.cpp prefdialog.cpp prefgeneral.cpp properties.cpp propertiesdialog.cpp tags.cpp tracesprovider.cpp traceview.cpp tracewidget.cpp zoomwindow.cpp sessionxmlwriter.cpp parameterxmlcreator.cpp parameterxmlmodifier.cpp imagecreator.cpp utilities.cpp eventdata.cpp positionpropertieslayout.cpp prefdefaultslayout.cpp prefgenerallayout.cpp propertieslayout.cpp clusterpropertieslayout.cpp neuroscopedoc.moc.cpp itemgroupview.moc.cpp positionview.moc.cpp neuroscopeview.moc.cpp positionsprovider.moc.cpp tracewidget.moc.cpp properties.moc.cpp propertiesdialog.moc.cpp itempalette.moc.cpp channelpalette.moc.cpp neuroscope.moc.cpp eventsprovider.moc.cpp traceview.moc.cpp globaleventsprovider.moc.cpp tracesprovider.moc.cpp positionproperties.moc.cpp channeliconview.moc.cpp dataprovider.moc.cpp clustersprovider.moc.cpp prefdefaults.moc.cpp itemiconview.moc.cpp baseframe.moc.cpp clusterproperties.moc.cpp prefdialog.moc.cpp channelgroupview.moc.cpp prefgeneral.moc.cpp ; do \
	  echo "#include \"$$file\"" >> neuroscope.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> neuroscope.all_cpp.final; \
	done; \
	cat neuroscope.all_cpp.final neuroscope.all_cpp.files > neuroscope.all_cpp.cpp; \
	rm -f neuroscope.all_cpp.final neuroscope.all_cpp.files

#>+ 3
clean-final:
	-rm -f neuroscope.all_cpp.cpp

#>+ 3
final:
	$(MAKE) neuroscope_OBJECTS="$(neuroscope_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) neuroscope_OBJECTS="$(neuroscope_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) neuroscope_OBJECTS="$(neuroscope_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) neuroscope_OBJECTS="$(neuroscope_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 44
$(srcdir)/tracesprovider.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/parameterxmlcreator.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/parameterxmlmodifier.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/main.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/itemiconview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/eventsprovider.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/itemgroupview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/baseframe.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/prefdialog.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/neuroscopexmlreader.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/zoomwindow.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
imagecreator.lo: imagecreator.moc 
$(srcdir)/prefdefaults.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/positionproperties.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/positionsprovider.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
nmcheck-am: nmcheck
$(srcdir)/prefgeneral.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/channeliconview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/neuroscopedoc.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/clusterproperties.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/configuration.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/tags.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/itemcolors.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/utilities.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/channelcolors.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/eventdata.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/dataprovider.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/sessionxmlwriter.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/channelpalette.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/clustersprovider.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/positionview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/traceview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/tracewidget.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
nmcheck: 
$(srcdir)/channelgroupview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/imagecreator.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/neuroscope.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/properties.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/neuroscopeview.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/itempalette.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
imagecreator.o: imagecreator.moc 
$(srcdir)/clustercolors.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 
$(srcdir)/propertiesdialog.cpp: positionpropertieslayout.h prefdefaultslayout.h prefgenerallayout.h propertieslayout.h clusterpropertieslayout.h 

#>+ 70
clusterpropertieslayout.cpp: $(srcdir)/clusterpropertieslayout.ui clusterpropertieslayout.h clusterpropertieslayout.moc
	rm -f clusterpropertieslayout.cpp
	echo '#include <klocale.h>' > clusterpropertieslayout.cpp
	$(UIC) -tr ${UIC_TR} -i clusterpropertieslayout.h $(srcdir)/clusterpropertieslayout.ui > clusterpropertieslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" clusterpropertieslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_clusterpropertieslayout,g" >> clusterpropertieslayout.cpp ;\
	rm -f clusterpropertieslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "clusterpropertieslayout.moc"' >> clusterpropertieslayout.cpp; else rm -f clusterpropertieslayout.cpp ; exit $$ret ; fi

clusterpropertieslayout.h: $(srcdir)/clusterpropertieslayout.ui
	$(UIC) -o clusterpropertieslayout.h $(srcdir)/clusterpropertieslayout.ui

clusterpropertieslayout.moc: clusterpropertieslayout.h
	$(MOC) clusterpropertieslayout.h -o clusterpropertieslayout.moc

prefgenerallayout.cpp: $(srcdir)/prefgenerallayout.ui prefgenerallayout.h prefgenerallayout.moc
	rm -f prefgenerallayout.cpp
	echo '#include <klocale.h>' > prefgenerallayout.cpp
	$(UIC) -tr ${UIC_TR} -i prefgenerallayout.h $(srcdir)/prefgenerallayout.ui > prefgenerallayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" prefgenerallayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_prefgenerallayout,g" >> prefgenerallayout.cpp ;\
	rm -f prefgenerallayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefgenerallayout.moc"' >> prefgenerallayout.cpp; else rm -f prefgenerallayout.cpp ; exit $$ret ; fi

prefgenerallayout.h: $(srcdir)/prefgenerallayout.ui
	$(UIC) -o prefgenerallayout.h $(srcdir)/prefgenerallayout.ui

prefgenerallayout.moc: prefgenerallayout.h
	$(MOC) prefgenerallayout.h -o prefgenerallayout.moc

prefdefaultslayout.cpp: $(srcdir)/prefdefaultslayout.ui prefdefaultslayout.h prefdefaultslayout.moc
	rm -f prefdefaultslayout.cpp
	echo '#include <klocale.h>' > prefdefaultslayout.cpp
	$(UIC) -tr ${UIC_TR} -i prefdefaultslayout.h $(srcdir)/prefdefaultslayout.ui > prefdefaultslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" prefdefaultslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_prefdefaultslayout,g" >> prefdefaultslayout.cpp ;\
	rm -f prefdefaultslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "prefdefaultslayout.moc"' >> prefdefaultslayout.cpp; else rm -f prefdefaultslayout.cpp ; exit $$ret ; fi

prefdefaultslayout.h: $(srcdir)/prefdefaultslayout.ui
	$(UIC) -o prefdefaultslayout.h $(srcdir)/prefdefaultslayout.ui

prefdefaultslayout.moc: prefdefaultslayout.h
	$(MOC) prefdefaultslayout.h -o prefdefaultslayout.moc

propertieslayout.cpp: $(srcdir)/propertieslayout.ui propertieslayout.h propertieslayout.moc
	rm -f propertieslayout.cpp
	echo '#include <klocale.h>' > propertieslayout.cpp
	$(UIC) -tr ${UIC_TR} -i propertieslayout.h $(srcdir)/propertieslayout.ui > propertieslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" propertieslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_propertieslayout,g" >> propertieslayout.cpp ;\
	rm -f propertieslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "propertieslayout.moc"' >> propertieslayout.cpp; else rm -f propertieslayout.cpp ; exit $$ret ; fi

propertieslayout.h: $(srcdir)/propertieslayout.ui
	$(UIC) -o propertieslayout.h $(srcdir)/propertieslayout.ui

propertieslayout.moc: propertieslayout.h
	$(MOC) propertieslayout.h -o propertieslayout.moc

positionpropertieslayout.cpp: $(srcdir)/positionpropertieslayout.ui positionpropertieslayout.h positionpropertieslayout.moc
	rm -f positionpropertieslayout.cpp
	echo '#include <klocale.h>' > positionpropertieslayout.cpp
	$(UIC) -tr ${UIC_TR} -i positionpropertieslayout.h $(srcdir)/positionpropertieslayout.ui > positionpropertieslayout.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" positionpropertieslayout.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_positionpropertieslayout,g" >> positionpropertieslayout.cpp ;\
	rm -f positionpropertieslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "positionpropertieslayout.moc"' >> positionpropertieslayout.cpp; else rm -f positionpropertieslayout.cpp ; exit $$ret ; fi

positionpropertieslayout.h: $(srcdir)/positionpropertieslayout.ui
	$(UIC) -o positionpropertieslayout.h $(srcdir)/positionpropertieslayout.ui

positionpropertieslayout.moc: positionpropertieslayout.h
	$(MOC) positionpropertieslayout.h -o positionpropertieslayout.moc
